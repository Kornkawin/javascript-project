html:
    - ul, li tag
    - label tag for input tag
css:
    - declaring global CSS variables by The :root CSS pseudo-class
    - use global CSS variables by var(<variable>)
    - responsive: min-height
    - Flex Items will have space between them
        justify-content: space-between;
    - select elements with a specific parent with (>) and with :first-of-type
    - all the flexible items be the same length, regardless of its content
        flex: 1;
        text-align: center;
    - Selects all elements with BOTH name1 AND name2 set within its class attribute by
        .name1.name2{}
    - Selects all elements with name2 that is a descendant of an element with name1
        .name1 .name2{}
    - display: inline-block vs block;
    - specific input type selector
        input[type="text"]
    - remove bullet points
        list-style-type: none;
    - position: relative;
        The element is positioned relative to its normal position,
        so "left:20px" adds 20 pixels to the element's LEFT position
    - position: absolute;
        The element is positioned relative to its first positioned ancestor element
    - transform: translate(x,y);
        move in (x,y) direction
    - fading down effect in specific time period
        opacity: 0;
        transition: opacity 0.3s ease;
    - fading up effect (with :hover selector)
        .list li:hover .delete-btn {
            opacity: 1;
        }
javascript:
    - callback function
    - trans.forEach((tran) => {...})
    - transform
        amounts = trans.map((tran) => tran.amount))
    - reduce to one value
        summation = amounts.reduce((sum, amt) => sum+=amt, 0)
    - filtering
        rev = amounts.filter(amount => amount >= 0)
    - chaining methods
        revenue = amounts.filter(amount => amount >= 0).reduce((sum, amount) => sum += amount, 0);
    - add class list to element
        item.classList.add("plus");
    - elem.innerText = "" && elem.innerHTML = ""
    - parent.appendChild(item)
    - regex
        /.../g
            The g means Global, and causes the replace call to replace all matches,
            not just the first one.
        (?=...)
            The stuff within should follow what we've matched so far,
            but we don't actually use it after found.
        (?!...)
            (?!...) says that should not follow by ...
        (\d{3})+
            one or more groups of three digits should follow
        (?=(\d{3})+(?!\d))
            assert that one or more groups of three digits should follow,
            but they should not have yet another digit following them all.
        (\d)(?=(\d{3})+(?!\d))
             find and capture "a number" (\d) that is followed by one or more
             groups of three digits and does not have another digit following
             them all. ex. 1000.00, 1000000.0000
    -

